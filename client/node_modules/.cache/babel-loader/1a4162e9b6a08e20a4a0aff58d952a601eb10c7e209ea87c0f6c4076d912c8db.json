{"ast":null,"code":"// src/services/api.js\n// src/services/api.js\nimport axios from \"axios\";\n\n// Base URL comes from .env (frontend)\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n// Create axios instance\nconst API = axios.create({\n  baseURL: API_URL\n});\n\n// Attach JWT automatically to all requests\nAPI.interceptors.request.use(req => {\n  const t = localStorage.getItem(\"token\");\n  if (t) req.headers.Authorization = `Bearer ${t}`;\n  return req;\n});\n\n// All jobs\nexport const getJobs = () => API.get(\"/jobs\");\nexport const employerRegister = formData => API.post(\"/employers/register\", formData);\n\n// Employer stats\nexport const getEmployerStats = () => API.get(\"/employers/stats\");\n\n// Employer-owned job list\nexport const getMyJobs = () => API.get(\"/jobs/employers/joblist\");\n\n// Applicants across employer’s jobs\nexport const getApplicants = async employerId => {\n  const token = localStorage.getItem(\"token\");\n  return axios.get(`${API_URL}/employers/${employerId}/applicants`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// Applicants by job\nexport const getApplicantsByJob = async jobId => {\n  const token = localStorage.getItem(\"token\");\n  return axios.get(`${API_URL}/applications/${jobId}/applicants`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// Company profile\nexport const getCompanyProfile = () => API.get(\"/employers/profile\");\nexport default API;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","API","create","baseURL","interceptors","request","use","req","t","localStorage","getItem","headers","Authorization","getJobs","get","employerRegister","formData","post","getEmployerStats","getMyJobs","getApplicants","employerId","token","getApplicantsByJob","jobId","getCompanyProfile"],"sources":["C:/Users/priya/Files/coding files/job_portal/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n// src/services/api.js\r\nimport axios from \"axios\";\r\n\r\n// Base URL comes from .env (frontend)\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\n// Create axios instance\r\nconst API = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Attach JWT automatically to all requests\r\nAPI.interceptors.request.use((req) => {\r\n  const t = localStorage.getItem(\"token\");\r\n  if (t) req.headers.Authorization = `Bearer ${t}`;\r\n  return req;\r\n});\r\n\r\n// All jobs\r\nexport const getJobs = () => API.get(\"/jobs\");\r\n\r\nexport const employerRegister = (formData) => API.post(\"/employers/register\", formData);\r\n\r\n\r\n\r\n// Employer stats\r\nexport const getEmployerStats = () => API.get(\"/employers/stats\");\r\n\r\n// Employer-owned job list\r\nexport const getMyJobs = () => API.get(\"/jobs/employers/joblist\");\r\n\r\n// Applicants across employer’s jobs\r\nexport const getApplicants = async (employerId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return axios.get(`${API_URL}/employers/${employerId}/applicants`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// Applicants by job\r\nexport const getApplicantsByJob = async (jobId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return axios.get(`${API_URL}/applications/${jobId}/applicants`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// Company profile\r\nexport const getCompanyProfile = () => API.get(\"/employers/profile\");\r\n\r\nexport default API;\r\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,MAAMC,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACvC,IAAIF,CAAC,EAAED,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,CAAC,EAAE;EAChD,OAAOD,GAAG;AACZ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAMZ,GAAG,CAACa,GAAG,CAAC,OAAO,CAAC;AAE7C,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAKf,GAAG,CAACgB,IAAI,CAAC,qBAAqB,EAAED,QAAQ,CAAC;;AAIvF;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAMjB,GAAG,CAACa,GAAG,CAAC,kBAAkB,CAAC;;AAEjE;AACA,OAAO,MAAMK,SAAS,GAAGA,CAAA,KAAMlB,GAAG,CAACa,GAAG,CAAC,yBAAyB,CAAC;;AAEjE;AACA,OAAO,MAAMM,aAAa,GAAG,MAAOC,UAAU,IAAK;EACjD,MAAMC,KAAK,GAAGb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOd,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,cAAcwB,UAAU,aAAa,EAAE;IAChEV,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUU,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,KAAK,IAAK;EACjD,MAAMF,KAAK,GAAGb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOd,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,iBAAiB2B,KAAK,aAAa,EAAE;IAC9Db,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUU,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,KAAMxB,GAAG,CAACa,GAAG,CAAC,oBAAoB,CAAC;AAEpE,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}